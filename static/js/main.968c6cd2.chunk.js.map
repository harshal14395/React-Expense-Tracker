{"version":3,"sources":["Components/Header.js","Context/AppReducer.js","Context/GlobalState.js","Components/Balance.js","Components/IncomeExpense.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","Math","abs","Transaction","sign","text","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransct","floor","random","parseInt","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.968c6cd2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h2>Expense Tracker</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n//Create Context//\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nfunction Balance() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc = acc + item), 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nfunction IncomeExpense() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc = acc + item), 0);\r\n\r\n  const expense = amounts\r\n    .filter((item) => item < 0)\r\n    .reduce((acc, item) => (acc = acc + item), 0);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">${Math.abs(expense)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IncomeExpense;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nfunction Transaction({ transaction }) {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}\r\n      <span>\r\n        {sign}\r\n        {Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nfunction TransactionList() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  // console.log(context);\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nfunction AddTransaction() {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransct = {\r\n      id: Math.floor(Math.random() * 100000),\r\n      text,\r\n      amount: parseInt(amount),\r\n    };\r\n    addTransaction(newTransct);\r\n  };\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label>Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddTransaction;\r\n","import \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Balance from \"./Components/Balance\";\nimport IncomeExpense from \"./Components/IncomeExpense\";\nimport TransactionList from \"./Components/TransactionList\";\nimport AddTransaction from \"./Components/AddTransaction\";\nimport { GlobalProvider } from \"./Context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"app\">\n        <div>\n          <Header />\n        </div>\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpense />\n          <TransactionList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}